@page
@model MediaLibrarian.Pages.MediaElementsModel

@{
    ViewData["Title"] = "MediaElements";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<span style="float:left;">
    <form asp-page="./Index" method="get">
        <div class="form-actions no-color">
            <p>
                Find by name:
                <input type="text" name="SearchString" value="@Model.CurrentFilter" />
                <input type="submit" value="Search" class="btn btn-primary" /> |
                <a asp-page="./Index">Back to full List</a>
            </p>
        </div>
    </form>
</span>
<span style="float:right;">
    <form method="post">
        <div class="form-group">
            <input type="submit" value="Retrieve new Data" class="btn btn-primary" />
        </div>
    </form>
</span>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.MediaElements[0].Channel)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MediaElements[0].Topic)
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.TitleSort"
                   asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.MediaElements[0].Title)
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MediaElements[0].Url)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MediaElements[0].Year)
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.DateSort"
                   asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.MediaElements[0].LastModified)
                </a>
            </th>
            @*<th>
            @Html.DisplayNameFor(model => model.MediaElements[0].OnlineFrom)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.MediaElements[0].OnlineUntil)
        </th>*@
            <th>
                @Html.DisplayNameFor(model => model.MediaElements[0].MediaType)
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.SeasonSort"
                   asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.MediaElements[0].Season)
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MediaElements[0].Episode)
            </th>
            <th></th>
            <th>IMDb-Suche</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.MediaElements)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Channel)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Topic)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                <a href=@item.Url>Direct Link to File</a>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Year)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastModified)
            </td>
            @*<td>
            @Html.DisplayFor(modelItem => item.OnlineFrom)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.OnlineUntil)
        </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.MediaType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Season)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Episode)
            </td>
            <td>
                <a asp-page="./Downloads" asp-page-handler="mediaelement" asp-route-id=@item.IdInChannel>Download</a>
            </td>
            <td>
                <a href="https://imdb.com/find?q=@item.Title">IMDb</a>
            </td>
        </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.MediaElements.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.MediaElements.HasNextPage ? "disabled" : "";
}

<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.MediaElements.PageIndex - 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @prevDisabled">
    Previous
</a>
<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.MediaElements.PageIndex + 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @nextDisabled">
    Next
</a>
